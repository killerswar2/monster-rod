{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","imgSRC","monster","id","className","alt","src","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","onChange","type","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GACjB,IAAMC,EAAS,wBAA0BD,EAAME,QAAQC,GAAK,wBAC5D,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAKL,IACxB,6BAAKD,EAAME,QAAQK,OACnB,6BAAKP,EAAME,QAAQM,YCLlBC,EAAW,SAACT,GACrB,OACI,qBAAKI,UAAU,YAAf,SACKJ,EAAMU,SAASC,KAAI,SAACT,GAAD,OAChB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLtBS,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACA,uBACIV,UAAU,SACVW,SAAUD,EACVE,KAAK,SACLH,YAAaA,MC6BNI,G,wDAhCb,aAAe,IAAD,8BACZ,gBAaFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAbpC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAc,IAJJ,E,qDAQd,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAACT,SAAWkB,S,oBAO1C,WAAU,IAAD,EAC0BC,KAAKN,MAA/Bb,EADA,EACAA,SAAUU,EADV,EACUA,YACXU,EAAmBpB,EAASqB,QAC9B,SAAA7B,GAAO,OAAGA,EAAQK,KAAKyB,cAAcC,SAASb,EAAYY,kBAC9D,OACE,sBAAK5B,UAAU,MAAf,UACA,iDACE,cAAC,EAAD,CAAWS,YAAY,kBAAkBC,aAAce,KAAKf,eAC5D,cAAC,EAAD,CAAUJ,SAAUoB,W,GA3BVI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cf9fbc05.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => {\r\n    const imgSRC = 'https://robohash.org/' + props.monster.id + '?set=set2&size180x180'\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" src={imgSRC}/>\r\n            <h2>{props.monster.name}</h2>\r\n            <h3>{props.monster.email}</h3>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport './card-list.styles.css';\r\nimport {Card} from \"../card/card.component\"\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map((monster) => (\r\n                <Card key={monster.id} monster={monster} />)\r\n            )}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => {\r\n    return (\r\n    <input \r\n        className='search' \r\n        onChange={handleChange} \r\n        type='search'  \r\n        placeholder={placeholder}\r\n    />);\r\n}","import React, { Component } from 'react';\r\nimport { CardList } from './components/card-list/card-list.component'\r\nimport {SearchBox} from './components/search-box/search-box.component';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      monsters: [],\r\n      searchField : ''\r\n    };\r\n  }\r\n\r\n  componentDidMount(){ // \r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response=>response.json()) // set response to json\r\n    .then(users=> this.setState({monsters : users})) // set the json to monsters state\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({searchField:e.target.value})\r\n  }\r\n\r\n  render() {\r\n    const {monsters, searchField} =  this.state;\r\n    const filteredMonsters = monsters.filter(\r\n        monster=> monster.name.toLowerCase().includes(searchField.toLowerCase()));\r\n    return (\r\n      <div className='App'>\r\n      <h1>Monster Rolodex</h1>\r\n        <SearchBox placeholder='search monsters' handleChange={this.handleChange}/>\r\n        <CardList monsters={filteredMonsters} />        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}